#!/usr/bin/env perl

#
# Ingo Schröder
#

$cmd=$0;
$cmd=~s/(.*\/)*//;
$purpouse = "split corpus file";
$Usage=
"NAME

  $cmd - $purpouse

SYNOPSIS

  $cmd OPTIONS [corpusfile]

OPTIONS

  -h          display this help
  -v   <uint> verbosity level [1]
  -k   <uint> number of sets [10]
  -p <string> output file names prefix []

VERSION


  ACOPOST 2.0.0 <https://github.com/acopost/acopost>
  Copyright (c) 2007-2016, ACOPOST Developers Team
  Copyright (c) 2001-2002, Ingo Schröder
";

use FileHandle;

use Getopt::Long;
Getopt::Long::Configure(qw( auto_abbrev no_ignore_case ));

sub usage
{
    print $Usage;
}

$p = "";
$m = 10;
$opt_v = 1;
GetOptions
(
 'F=s' => \$p,
 'k=i' => \$m,
 'v=i' => \$opt_v,
 'h|help'        => sub { usage (); exit },
);

die $Usage if  $#ARGV>0;

if ($#ARGV==0) {
  open(STDIN, "<$ARGV[0]") || die "$cmd: can't open corpus file \"$ARGV[0]\": $!\n";
  $ARGV[0]=~s/.cooked$//;
  if($p eq "")
  {
    $p = $ARGV[0];
  }
}
if($p eq "")
{
  $p = "pre";
}

for ($i=0; $i<$m; $i++) {
  my $fh=new FileHandle;
  $fh->open(">$p-$i") || die "can't open file \"$p-$i\": $!\n";
  push(@fhs, $fh);
}

for ($i=0; $l=<STDIN>; $i++) {
  my $fh=$fhs[$i%$m];
  printf "%d\r", $i;
  print $fh $l;
}

foreach $fh (@fhs) {
  $fh->close;
}
